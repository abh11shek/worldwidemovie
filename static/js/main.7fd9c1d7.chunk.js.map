{"version":3,"sources":["Components/Movie.js","App.js","index.js"],"names":["checkVote","vote","Movie","title","poster_path","overview","vote_average","className","src","alt","FEATURED_API","App","useState","movies","setMovies","searchTerm","setSearchTerm","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","href","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","onClick","map","movie","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAeMA,EAAY,SAACC,GACf,OAAY,IAATA,EACQ,MAEAA,GAmBAC,EAhBD,SAAC,GAAD,IAlBQD,EAkBNE,EAAF,EAAEA,MAAOC,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,SAAUC,EAAhC,EAAgCA,aAAhC,OACV,qBAAKC,UAAU,gBAAf,SACI,sBAAKA,UAAU,QAAf,UACA,qBAAKC,IAvBG,oCAuBYJ,EAAaK,IAAKN,IACtC,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAxBLN,EAwB2BK,EAvB1CL,GAAQ,EACA,QACFA,GAAQ,EACN,SACFA,EAAO,EACL,MAEA,UAgBH,SAAuDD,EAAUM,QAErE,sBAAKC,UAAU,aAAf,UACI,0CACA,4BAAIF,aC5BVK,EAAe,sHAiFNC,MA7Ef,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WACRC,EAAUR,KACT,IAEH,IAAMQ,EAAY,SAACC,GACjBC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZV,EAAUU,EAAKG,aAyBnB,OACA,qCACE,iCACE,sBAAKpB,UAAU,gBAAf,UACE,qBAAKA,UAAU,YAAf,SACE,mBAAGqB,KAAK,OAAR,SACE,qBAAKrB,UAAU,QAAf,SACE,0DAIN,qBAAKA,UAAU,cAAf,SACE,uBAAMsB,SAjCS,SAACC,GACtBA,EAAEC,iBAEChB,IACDG,EAvBa,6FAuBUH,GACvBC,EAAc,MA4BV,UACE,uBAAOT,UAAU,SAASyB,KAAK,SAASC,YAAY,eAClDC,MAAOnB,EAAYoB,SA1BR,SAACL,GACtBd,EAAcc,EAAEM,OAAOF,UA0Bb,wBAAQ3B,UAAU,eAAeyB,KAAK,SAAtC,8BAKV,sBAAKzB,UAAU,cAAf,UACU,wBAAQ8B,QA7BE,SAACP,GACrBZ,EAAUR,IA4BgCH,UAAU,6BAA6ByB,KAAK,SAA5E,qBACA,wBAAQK,QA1BC,SAACP,GACpBZ,EAtCe,oHA+D0BX,UAAU,4BAA4ByB,KAAK,SAA1E,uBAEV,qBAAKzB,UAAU,OAAf,SACI,qBAAKA,UAAU,kBAAf,SACGM,GAAUA,EAAOyB,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,eAA0BA,GAAdA,EAAMC,WAG1B,qBAAKjC,UAAU,SAAf,SACE,2DCxENkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7fd9c1d7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org./t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8)\r\n        return 'green';\r\n    else if (vote >= 6)\r\n        return 'orange';\r\n    else if (vote > 0)\r\n        return 'red';\r\n    else\r\n        return 'black';\r\n}\r\n\r\nconst checkVote = (vote) => {\r\n    if(vote === 0)\r\n        return 'N/A';\r\n    else\r\n        return vote;\r\n}\r\n\r\nconst Movie = ({title, poster_path, overview, vote_average}) => (\r\n    <div className=\"movie-outline\">\r\n        <div className=\"movie\">\r\n        <img src={IMG_API + poster_path} alt={title} />\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setVoteClass(vote_average)}`}>{checkVote(vote_average)}</span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default Movie;","import React, {useEffect, useState} from \"react\";\n\nimport Movie from './Components/Movie'\n\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=1\";\nconst LATEST_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=latest.desc&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=1\"\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&query=\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    getMovies(FEATURED_API);\n  }, []);\n\n  const getMovies = (API) => {\n    fetch(API)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setMovies(data.results);\n    });\n  }\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n    \n    if(searchTerm) {\n      getMovies(SEARCH_API + searchTerm);\n      setSearchTerm('');\n    }\n  };\n\n  const handleOnChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n\n  const handlePopular = (e) => {\n    getMovies(FEATURED_API);\n  }\n\n  const handleLatest = (e) => {\n    getMovies(LATEST_API);\n  }\n\n  return ( \n  <>\n    <header>\n      <div className=\"nav-container\">\n        <div className=\"link-area\">\n          <a href=\"Home\">\n            <div className=\"brand\">\n              <h1>worldwidemovie.org</h1>\n            </div>\n          </a>\n        </div>\n        <div className=\"search-area\">\n          <form onSubmit={handleOnSubmit}>\n            <input className=\"search\" type=\"search\" placeholder=\"Type here...\" \n              value={searchTerm} onChange={handleOnChange}/>\n              <button className=\"searchButton\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </div>\n    </header>\n    <div className=\"sort-movies\">\n              <button onClick={handlePopular} className=\"popular-button sort-button\" type=\"submit\">Popular</button>\n              <button onClick={handleLatest} className=\"latest-button sort-button\" type=\"submit\">Latest</button>\n    </div>\n    <div className=\"page\">\n        <div className=\"movie-container\">\n          {movies && movies.map((movie) =>\n            <Movie key={movie.id} {...movie}  />)}\n        </div>\n    </div>\n    <div className=\"bottom\">\n      <h3>\n      Powered by TMDb API\n      </h3>\n    </div>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}