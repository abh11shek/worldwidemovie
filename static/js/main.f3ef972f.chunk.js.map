{"version":3,"sources":["Components/Jumbo.js","Components/Movie.js","Components/Footer.js","Landingpage.js","MovieDetailPage.js","App.js","index.js"],"names":["Jumbo","props","className","style","background","image","height","width","position","maxWidth","bottom","marginLeft","color","title","overview","type","checkVote","vote","Movie","poster_path","vote_average","src","alt","Footer","FEATURED_API","Landingpage","useState","movies","setMovies","searchTerm","setSearchTerm","currentPage","setCurrentPage","currentAPI","setCurrentAPI","useEffect","getMovies","API","fetch","then","res","json","data","console","log","results","page","substring","length","scrollToTop","window","scrollTo","top","behavior","href","onSubmit","e","preventDefault","placeholder","value","onChange","target","backdrop_path","original_title","onClick","LATEST_API","map","movie","id","display","justifyContent","marginTop","endPoint","handleReload","handleNextPage","MovieDetailPage","movieId","useParams","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3ef972f.chunk.js","sourcesContent":["const Jumbo = (props) => {\r\n    return ( \r\n        <div className=\"jumbotron\" style={{\r\n            background:\r\n            `linear-gradient(to bottom, rgba(0,0,0,0)\r\n            39%, rgba(0, 0, 0, 0.65) 100%),\r\n            url('${props.image}'), #1c1c1c`,\r\n            height: '500px',\r\n            width: '100%',\r\n            position: 'relative'\r\n        }}>\r\n                <div style={{ position: 'absolute', maxWidth: '1200px', bottom: '2rem', marginLeft: '10%'}}>\r\n                    <h1 className=\"jumbo-heading\" style={{color: 'white'}}>{props.title}</h1>\r\n                    <p className=\"jumbo-para\">{props.overview}</p>\r\n                    <p>\r\n                    <button className=\"jumbo-button\" type=\"submit\">View</button>\r\n                    </p>\r\n                </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Jumbo;","import React from 'react';\r\n\r\nconst IMG_API = \"https://image.tmdb.org./t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8)\r\n        return 'green';\r\n    else if (vote >= 6)\r\n        return 'orange';\r\n    else if (vote > 0)\r\n        return 'red';\r\n    else\r\n        return 'black';\r\n}\r\n\r\nconst checkVote = (vote) => {\r\n    if(vote === 0)\r\n        return 'N/A';\r\n    else\r\n        return vote;\r\n}\r\n\r\nconst Movie = ({title, poster_path, overview, vote_average}) => (\r\n    <div className=\"movie-outline\">\r\n        <div className=\"movie\">\r\n        <img src={IMG_API + poster_path} alt={title} />\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setVoteClass(vote_average)}`}>{checkVote(vote_average)}</span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n        </div>\r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default Movie;","const Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n            <h3>Powered by TMDb API</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\r\nimport Jumbo from \"./Components/Jumbo\";\r\nimport { HiSearch } from 'react-icons/hi'\r\nimport { useScrollTo } from \"react-use-window-scroll\";\r\n\r\nimport Movie from './Components/Movie'\r\nimport Footer from \"./Components/Footer\";\r\n\r\nconst FEATURED_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\";\r\nconst LATEST_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=latest.desc&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\"\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&query=\";\r\nconst IMG_URL = \"http://image.tmdb.org/t/p/\";\r\n\r\nconst Landingpage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [currentAPI, setCurrentAPI] = useState('');\r\n\r\n    useEffect(() => {\r\n        getMovies(FEATURED_API+'1');\r\n    },[]);\r\n\r\n    const getMovies = (API) => {\r\n        fetch(API)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            setMovies(data.results);\r\n            setCurrentPage(data.page);\r\n            setCurrentAPI(API.substring(0,API.length-1));\r\n        });\r\n    }\r\n\r\n    \r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(searchTerm) {\r\n            getMovies(SEARCH_API + searchTerm);\r\n            setSearchTerm('');\r\n        }\r\n    };\r\n    \r\n    const handleOnChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n    \r\n    \r\n    const handlePopular = (e) => {\r\n        getMovies(FEATURED_API+'1');\r\n    }\r\n        \r\n    const handleLatest = (e) => {\r\n        getMovies(LATEST_API+'1');\r\n    }\r\n\r\n    const handleReload = () => {\r\n        const endPoint = `${currentAPI}1`;\r\n        getMovies(endPoint);\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        const endPoint = `${currentAPI}${currentPage + 1}`;\r\n        getMovies(endPoint);\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({top: 500, behavior: \"smooth\"})\r\n    }\r\n        \r\n    return ( \r\n        <>\r\n        <header>\r\n            <div className=\"nav-container\">\r\n                <div className=\"link-area\">\r\n                    <a href=\"Home\">\r\n                        <div className=\"brand\">\r\n                            <h1>worldwidemovie.org</h1>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className=\"search-area\">\r\n                    <form onSubmit={handleOnSubmit}>\r\n                        <input className=\"search\" type=\"search\" placeholder=\"Search movie...\" \r\n                            value={searchTerm} onChange={handleOnChange}/>\r\n                            <button className=\"searchButton\" type=\"submit\"><HiSearch /></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </header>\r\n        \r\n        {movies[0] &&\r\n            <Jumbo \r\n            image={`${IMG_URL}w1280${movies[0].backdrop_path}`} \r\n            title={movies[0].original_title}\r\n            overview={movies[0].overview}/>\r\n        }\r\n        \r\n\r\n        <div className=\"sort-movies\">\r\n            <button onClick={handlePopular} className=\"popular-button sort-button\" type=\"submit\">Popular</button>\r\n            <button onClick={handleLatest} className=\"latest-button sort-button\" type=\"submit\">Latest</button>\r\n        </div>\r\n        \r\n        <div className=\"page\">\r\n            <div className=\"movie-container\">\r\n            {movies && movies.map((movie) =>\r\n                <Movie key={movie.id} {...movie}  />)}\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n            <button onClick={() => {handleReload(); scrollToTop()}}>Reload</button>\r\n            <button onClick={() => {handleNextPage(); scrollToTop()}}>Next Page</button>\r\n        </div>\r\n        \r\n        <Footer />\r\n\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Landingpage;","//import React, { useEffect } from \"react\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nconst MovieDetailPage = (props) => {\r\n\r\n    const { movieId } = useParams();\r\n    console.log(movieId);\r\n    //\r\n    //useEffect((props) => {\r\n\r\n\r\n        //const MOV_API = `https://api.themoviedb.org/3/movie/${movieId}?api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&language=en-US`\r\n        //fetch(MOV_API)\r\n        //.then(response => response.json())\r\n        //.then(response => {\r\n        //    console.log(response);\r\n        //})\r\n\r\n    //}, [])\r\n\r\n    return ( \r\n        <div>\r\n            <h1 style={{color: 'white'}}>This is movie details page with id {movieId}.</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailPage;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landingpage from \"./Landingpage\";\nimport MovieDetailPage from \"./MovieDetailPage\";\n\nfunction App() {\n  return ( \n  <>\n  <Router>\n    <div className=\"web-app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Landingpage />\n        </Route>\n        <Route path=\"/MovieDetailPage/:movieId\">\n          <MovieDetailPage />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}