{"version":3,"sources":["Components/Jumbo.js","Components/Movie.js","Components/Footer.js","Landingpage.js","MovieDetailPage.js","App.js","index.js"],"names":["Jumbo","props","className","style","background","image","backgroundSize","backgroundPosition","minWidth","position","maxWidth","bottom","marginLeft","color","title","overview","to","id","type","checkVote","vote","Movie","poster_path","vote_average","src","alt","Footer","FEATURED_API","Landingpage","useState","movies","setMovies","searchTerm","setSearchTerm","currentPage","setCurrentPage","currentAPI","setCurrentAPI","useEffect","getMovies","API","fetch","then","res","json","data","results","console","log","page","substring","length","scrollToTop","window","scrollTo","top","behavior","onSubmit","e","preventDefault","placeholder","value","onChange","target","backdrop_path","original_title","onClick","TOPRATED_API","LATEST_API","UPCOMING_API","map","movie","display","justifyContent","marginTop","endPoint","handleReload","handleNextPage","MovieDetailPage","setMovie","movieId","useParams","MOV_API","response","width","padding","size","marginBottom","border","bordered","Item","label","release_date","revenue","runtime","span","vote_count","status","popularity","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aba0ab01.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Jumbo = (props) => {\r\n    return ( \r\n        <>\r\n            <div className=\"jumbo\" style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                39%, rgba(0, 0, 0, 0.65) 100%),\r\n                url('${props.image}'), #1c1c1c`,\r\n                backgroundSize: '100%, cover',\r\n                backgroundPosition: 'center, center',\r\n                minWidth: '540px'}}>\r\n                    <div style={{ position: 'absolute', maxWidth: '1200px', bottom: '2rem', marginLeft: '10%'}}>\r\n                        <h1 className=\"jumbo-heading\" style={{color: 'white'}}>{props.title}</h1>\r\n                        <p className=\"jumbo-para\">{props.overview}</p>\r\n                        <Link to={`/worldwidemovie/MovieDetailPage/${props.id}`}>\r\n                            <p>\r\n                            <button className=\"jumbo-button\" type=\"submit\">View</button>\r\n                            </p>\r\n                        </Link>\r\n                    </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Jumbo;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst IMG_API = \"https://image.tmdb.org./t/p/w1280\";\r\n\r\nconst setVoteClass = (vote) => {\r\n    if(vote >= 8)\r\n        return 'green';\r\n    else if (vote >= 6)\r\n        return 'orange';\r\n    else if (vote > 0)\r\n        return 'red';\r\n    else\r\n        return 'black';\r\n}\r\n\r\nconst checkVote = (vote) => {\r\n    if(vote === 0)\r\n        return 'N/A';\r\n    else\r\n        return vote;\r\n}\r\n\r\nconst Movie = ({title, poster_path, overview, vote_average, id}) => (\r\n    <div className=\"movie-outline\">\r\n        <div className=\"movie\">\r\n            <Link to={`/worldwidemovie/MovieDetailPage/${id}`}>\r\n                <img src={IMG_API + poster_path} alt={title} />\r\n            </Link>\r\n        <div className=\"movie-info\">\r\n            <h3>{title}</h3>\r\n            <span className={`tag ${setVoteClass(vote_average)}`}>{checkVote(vote_average)}</span>\r\n        </div>\r\n        <Link to={`/worldwidemovie/MovieDetailPage/${id}`}>\r\n            <div className=\"movie-over\">\r\n                <h2>Overview</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n        </Link>\r\n        \r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default Movie;","const Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n            <h3>Powered by TMDb API</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {useEffect, useState} from \"react\";\r\nimport Jumbo from \"./Components/Jumbo\";\r\nimport { HiSearch } from 'react-icons/hi'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Movie from './Components/Movie'\r\nimport Footer from \"./Components/Footer\";\r\n\r\nconst FEATURED_API = \"https://api.themoviedb.org/3/movie/popular?api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\";\r\nconst LATEST_API = \"https://api.themoviedb.org/3/discover/movie?sort_by=latest.desc&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\"\r\nconst TOPRATED_API = \"https://api.themoviedb.org/3/movie/top_rated?api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\";\r\nconst UPCOMING_API = \"https://api.themoviedb.org/3/movie/upcoming?api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&page=\";\r\nconst SEARCH_API = \"https://api.themoviedb.org/3/search/movie?&api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&query=\";\r\nconst IMG_URL = \"http://image.tmdb.org/t/p/\";\r\n\r\nconst Landingpage = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const [currentAPI, setCurrentAPI] = useState('');\r\n\r\n    useEffect(() => {\r\n        getMovies(FEATURED_API+'1');\r\n    },[]);\r\n\r\n    const getMovies = (API) => {\r\n        fetch(API)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            setMovies(data.results);\r\n            console.log(data.results);\r\n            setCurrentPage(data.page);\r\n            setCurrentAPI(API.substring(0,API.length-1));\r\n        });\r\n    }\r\n\r\n    \r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(searchTerm) {\r\n            getMovies(SEARCH_API + searchTerm);\r\n            setSearchTerm('');\r\n        }\r\n    };\r\n    \r\n    const handleOnChange = (e) => {\r\n        setSearchTerm(e.target.value);\r\n    };\r\n    \r\n    \r\n    const handlePopular = (e) => {\r\n        getMovies(FEATURED_API+'1');\r\n    }\r\n        \r\n    const handleLatest = (e) => {\r\n        getMovies(LATEST_API+'1');\r\n    }\r\n\r\n    const handleTopRated = (e) => {\r\n        getMovies(TOPRATED_API+'1');\r\n    }\r\n\r\n    const handleUpcoming = (e) => {\r\n        getMovies(UPCOMING_API+'1');\r\n    }\r\n\r\n    const handleReload = () => {\r\n        const endPoint = `${currentAPI}1`;\r\n        getMovies(endPoint);\r\n    }\r\n\r\n    const handleNextPage = () => {\r\n        const endPoint = `${currentAPI}${currentPage + 1}`;\r\n        getMovies(endPoint);\r\n    }\r\n\r\n    const scrollToTop = () => {\r\n        window.scrollTo({top: 500, behavior: \"smooth\"})\r\n    }\r\n        \r\n    return ( \r\n        <>\r\n        <header>\r\n            <div className=\"nav-container\">\r\n                <div className=\"link-area\">\r\n                    <Link className=\"brand\" to=\"/worldwidemovie/\">\r\n                        <div className=\"brand\">\r\n                            <h1 className=\"main-title\">worldwidemovie.org</h1>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"search-area\">\r\n                    <form onSubmit={handleOnSubmit}>\r\n                        <input className=\"search\" type=\"search\" placeholder=\"Search movie...\" \r\n                            value={searchTerm} onChange={handleOnChange}/>\r\n                            <button className=\"searchButton\" type=\"submit\"><HiSearch /></button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </header>\r\n        \r\n        {movies[0] &&\r\n            <Jumbo \r\n            image={`${IMG_URL}w1280${movies[0].backdrop_path}`} \r\n            title={movies[0].original_title}\r\n            overview={movies[0].overview}\r\n            id={movies[0].id}/>\r\n        }\r\n        \r\n\r\n        <div className=\"sort-movies\">\r\n            <button onClick={handleTopRated} className=\"top-rated-button sort-button\" type=\"submit\">Top-Rated</button>\r\n            <button onClick={handlePopular} className=\"popular-button sort-button\" type=\"submit\">Popular</button>\r\n            <button onClick={handleLatest} className=\"latest-button sort-button\" type=\"submit\">Latest</button>\r\n            <button onClick={handleUpcoming} className=\"upcoming-button sort-button\" type=\"submit\">Upcoming</button>\r\n        </div>\r\n        \r\n        <div className=\"page\">\r\n            <div className=\"movie-container\">\r\n            {movies && movies.map((movie) =>\r\n                <Movie key={movie.id} {...movie}  />)}\r\n            </div>\r\n        </div>\r\n\r\n        <div style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n            <button className=\"button-scroll button-reload\" onClick={() => {handleReload(); scrollToTop()}}>Reload</button>\r\n            <button className=\"button-scroll button-next-page\" onClick={() => {handleNextPage(); scrollToTop()}}>Next Page</button>\r\n        </div>\r\n        \r\n        <Footer />\r\n\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Landingpage;","import React, { useEffect, useState } from \"react\";\r\nimport { Descriptions } from 'antd';\r\nimport { useParams } from \"react-router-dom\";\r\nimport Footer from \"./Components/Footer\";\r\nimport { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieDetailPage = (props) => {\r\n\r\n    const [Movie, setMovie] = useState([]);\r\n\r\n    const { movieId } = useParams();\r\n\r\n    useEffect((props) => {\r\n\r\n        const MOV_API = `https://api.themoviedb.org/3/movie/${movieId}?api_key=ce7af241c4351bc2b9e464ec9c9bbcc7&language=en-US`\r\n        \r\n        fetch(MOV_API)\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            setMovie(response);\r\n            console.log(response);\r\n        })\r\n\r\n    }, [])\r\n\r\n    const IMG_URL = 'http://image.tmdb.org/t/p/';\r\n\r\n    return (\r\n        <>\r\n            <div style={{width: '100%', background: '#ffcf29', padding: '10px'}}>\r\n                <Link to=\"/worldwidemovie/\"><IoMdArrowRoundBack size={30} color=\"#304e83\" style={{marginLeft: '5vw'}}/></Link>\r\n            </div>\r\n\r\n            <div className=\"jumbo\" style={{\r\n                background:\r\n                `linear-gradient(to bottom, rgba(0,0,0,0)\r\n                39%, rgba(0, 0, 0, 0.65) 100%),\r\n                url('${IMG_URL}w1280${Movie.backdrop_path && Movie.backdrop_path}'), #1c1c1c`,\r\n                backgroundSize: '100%, cover',\r\n                minWidth: '540px'}}>\r\n                    <div style={{ position: 'absolute', maxWidth: '1200px', bottom: '2rem', marginLeft: '10%'}}>\r\n                        <h1 className=\"jumbo-heading\" style={{color: 'white'}}>{Movie.original_title}</h1>\r\n                        <p className=\"jumbo-para\">{Movie.overview}</p>\r\n                    </div>\r\n            </div>\r\n            <div style={{display: 'flex', justifyContent: 'center', marginTop: '100px', marginBottom:'200px'}}>\r\n            <div style={{border: '2px, solid, white', padding: '20px'}}>\r\n                <Descriptions title=\"Movie Info\" bordered style={{color:\"white\"}}>\r\n                    <Descriptions.Item label=\"Title\">{Movie.original_title}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"release_date\">{Movie.release_date}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"revenue\">{Movie.revenue}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"runtime\">{Movie.runtime}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"vote_average\" span={2}>{Movie.vote_average}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"vote_count\">{Movie.vote_count}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"status\">{Movie.status}</Descriptions.Item>\r\n                    <Descriptions.Item label=\"popularity\">{Movie.popularity}</Descriptions.Item>\r\n                </Descriptions>\r\n            </div>\r\n            </div>\r\n            \r\n            <Footer />\r\n        </> \r\n    )\r\n}\r\n\r\nexport default MovieDetailPage;","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Landingpage from \"./Landingpage\";\nimport MovieDetailPage from \"./MovieDetailPage\";\n\nfunction App() {\n  return ( \n  <>\n  <Router>\n    <div className=\"web-app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Landingpage />\n        </Route>\n        <Route path=\"/MovieDetailPage/:movieId\">\n          <MovieDetailPage />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}